query Municipalities($locale: String!, $query: String, $ids: [String!]) {
  municipalities: searchMunicipalities(
    locale: $locale
    query: $query
    ids: $ids
  ) {
    id
    name
  }
}

query AllMunicipalities($locale: String!) {
  municipalities: allMunicipalities(locale: $locale) {
    id
    name
  }
}

query Operators($locale: String!, $query: String, $ids: [String!]) {
  operators: searchOperators(locale: $locale, query: $query, ids: $ids) {
    id
    name
  }
}

query Cantons($locale: String!, $query: String, $ids: [String!]) {
  cantons: searchCantons(locale: $locale, query: $query, ids: $ids) {
    id
    name
  }
}

query PeerGroups($locale: String!) {
  peerGroups(locale: $locale) {
    id
    name
  }
}

query Search($locale: String!, $query: String) {
  search(locale: $locale, query: $query) {
    id
    name
  }
}

fragment operatorObservationFields on OperatorObservation {
  period
  municipality
  municipalityLabel
  operator
  operatorLabel
  canton
  cantonLabel
  category
  value(priceComponent: $priceComponent)
  coverageRatio
}

fragment cantonMedianObservationFields on CantonMedianObservation {
  period
  canton
  cantonLabel
  category
  value(priceComponent: $priceComponent)
}

fragment swissMedianObservationFields on SwissMedianObservation {
  period
  category
  value(priceComponent: $priceComponent)
}

query Observations(
  $locale: String!
  $priceComponent: PriceComponent!
  $filters: ObservationFilters!
  $observationKind: ObservationKind
) {
  observations(
    locale: $locale
    filters: $filters
    observationKind: $observationKind
  ) {
    ...operatorObservationFields
  }
  cantonMedianObservations(
    locale: $locale
    filters: $filters
    observationKind: $observationKind
  ) {
    ...cantonMedianObservationFields
  }
  swissMedianObservations(locale: $locale, filters: $filters) {
    ...swissMedianObservationFields
  }
}

fragment operatorObservationWithAllPriceComponentsFields on OperatorObservation {
  period
  municipality
  municipalityLabel
  operator
  operatorLabel
  category

  aidfee: value(priceComponent: aidfee)
  annualmeteringcost: value(priceComponent: annualmeteringcost)
  meteringrate: value(priceComponent: meteringrate)
  fixcosts: value(priceComponent: fixcosts)
  charge: value(priceComponent: charge)
  gridusage: value(priceComponent: gridusage)
  energy: value(priceComponent: energy)
  fixcostspercent: value(priceComponent: fixcostspercent)
  total: value(priceComponent: total)
}

fragment cantonMedianObservationWithAllPriceComponentsFields on CantonMedianObservation {
  period
  canton
  cantonLabel
  category

  aidfee: value(priceComponent: aidfee)
  charge: value(priceComponent: charge)
  gridusage: value(priceComponent: gridusage)
  energy: value(priceComponent: energy)
  total: value(priceComponent: total)
}

query ObservationsWithAllPriceComponents(
  $locale: String!
  $filters: ObservationFilters!
  $observationKind: ObservationKind
) {
  observations(
    locale: $locale
    filters: $filters
    observationKind: $observationKind
  ) {
    ...operatorObservationWithAllPriceComponentsFields
  }
  cantonMedianObservations(
    locale: $locale
    filters: $filters
    observationKind: $observationKind
  ) {
    ...cantonMedianObservationWithAllPriceComponentsFields
  }
}

query OperatorDocuments($id: String!, $locale: String!) {
  operator(id: $id, locale: $locale) {
    name
    documents {
      id
      name
      url
      year
      category
    }
    geverDocuments {
      id
      name
      url
      year
      category
    }
  }
}

query WikiContent($locale: String!, $slug: String!) {
  wikiContent(locale: $locale, slug: $slug) {
    html
    info
  }
}

query OperatorMunicipalities($period: String!, $electricityCategory: String!) {
  operatorMunicipalities(
    period: $period
    electricityCategory: $electricityCategory
  ) {
    municipality
    canton
    operator
  }
}

query SystemInfo {
  systemInfo {
    SPARQL_ENDPOINT
    VERSION
  }
}

query CubeHealth {
  cubeHealth {
    ok
    dimensions
  }
}

query SunshineData($filter: SunshineDataFilter!) {
  sunshineData(filter: $filter) {
    operatorId
    operatorUID
    name
    period
    francRule
    infoYesNo
    infoDaysInAdvance
    productsCount
    productsSelection
    timely
    saidiTotal
    saidiUnplanned
    saifiTotal
    saifiUnplanned
    networkCostsNE5
    networkCostsNE6
    networkCostsNE7
    tariffEC2
    tariffEC3
    tariffEC4
    tariffEC6
    tariffEH2
    tariffEH4
    tariffEH7
    tariffNC2
    tariffNC3
    tariffNC4
    tariffNC6
    tariffNH2
    tariffNH4
    tariffNH7
  }
}

query SunshineDataByIndicator($filter: SunshineDataFilter!) {
  sunshineDataByIndicator(filter: $filter) {
    data {
      operatorId
      operatorUID
      name
      period
      value
    }
  }
  sunshineMedianByIndicator(filter: $filter)
}

query SunshineTariff($filter: SunshineDataFilter!) {
  sunshineTariffs(filter: $filter) {
    operatorId
    operatorUID
    name
    period
    francRule
    infoYesNo
    infoDaysInAdvance
    productsCount
    productsSelection
    timely
    saidiTotal
    saidiUnplanned
    saifiTotal
    saifiUnplanned
    tariffEC2
    tariffEC3
    tariffEC4
    tariffEC6
    tariffEH2
    tariffEH4
    tariffEH7
    tariffNC2
    tariffNC3
    tariffNC4
    tariffNC6
    tariffNH2
    tariffNH4
    tariffNH7
  }
}

query SunshineTariffByIndicator(
  $filter: SunshineDataFilter!
  $indicator: String!
) {
  sunshineTariffsByIndicator(filter: $filter, indicator: $indicator) {
    operatorId
    operatorUID
    name
    period
    value
  }
}

query OperationalStandards($filter: OperationalStandardsFilter!) {
  operationalStandards(filter: $filter) {
    latestYear
    operator {
      peerGroup {
        settlementDensity
        energyDensity
      }
    }
    productVariety {
      ecoFriendlyProductsOffered
      productCombinationsOptions
      operatorsProductsOffered {
        operatorId
        ecoFriendlyProductsOffered
        year
      }
    }
    serviceQuality {
      notificationPeriodDays
      informingCustomersOfOutage
      operatorsNotificationPeriodDays {
        operatorId
        days
        year
      }
    }
    compliance {
      francsRule
      timelyPaperSubmission
      operatorsFrancsPerInvoice {
        operatorId
        francsPerInvoice
        year
      }
    }
    updateDate
  }
}
