type PriceComponents {
  total: Float!
  # TODO: Add more price components
}

interface SearchResult {
  id: String!
  name: String!
}
type MunicipalityResult implements SearchResult {
  id: String!
  name: String!
}
type ProviderResult implements SearchResult {
  id: String!
  name: String!
}
type CantonResult implements SearchResult {
  id: String!
  name: String!
}

type Municipality {
  id: String!
  name: String!
  canton: Canton!
  providers: [Provider!]!
  priceComponents: PriceComponents!
}

type Provider {
  id: String!
  name: String!
  municipalities: [Municipality!]!
  priceComponents: PriceComponents!
}

type Canton {
  id: String!
  name: String!
  municipalities: [Municipality!]!
  priceComponents: PriceComponents!
}

type TemporalDimension {
  iri: String!
  name: String
  min: String!
  max: String!
}

type ProviderObservation {
  municipality: String!
  municipalityLabel: String
  provider: String!
  providerLabel: String
  canton: String!
  cantonLabel: String
  category: String!
  period: String!

  value(priceComponent: PriceComponent!): Float!
}

type MedianObservation {
  canton: String!
  cantonLabel: String

  category: String!
  period: String!

  value(priceComponent: PriceComponent!): Float!
}

union Observation = ProviderObservation | MedianObservation

input ObservationFilters {
  period: [String!]
  municipality: [String!]
  canton: [String!]
  provider: [String!]
  category: [String!]
  product: [String!]
}

enum PriceComponent {
  aidfee
  fixcosts
  charge
  gridusage
  energy
  fixcostspercent
  total
}

enum ObservationType {
  MedianObservation
  ProviderObservation
}

type Query {
  municipalities(
    locale: String
    query: String
    ids: [String!]
  ): [Municipality!]!
  cantons(locale: String, query: String, ids: [String!]): [Canton!]!
  providers(locale: String, query: String, ids: [String!]): [Provider!]!
  search(locale: String, query: String): [SearchResult!]!
  municipality(locale: String, id: String!): Municipality
  canton(locale: String, id: String!): Canton
  provider(locale: String, id: String!): Provider

  observations(
    locale: String
    filters: ObservationFilters
    observationType: ObservationType
  ): [Observation!]!
  # cantonObservations(
  #   locale: String
  #   filters: ObservationFilters
  # ): [Observation!]!
}
